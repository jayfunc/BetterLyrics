<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="BetterLyrics.WinUI3.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:labs="using:CommunityToolkit.Labs.WinUI.MarqueeTextRns"
    xmlns:local="using:BetterLyrics.WinUI3.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    NavigationCacheMode="Required"
    mc:Ignorable="d">

    <Grid x:Name="RootGrid">
        <Grid.Resources>
            <Thickness x:Key="TeachingTipDescriptionMargin">0,16,0,0</Thickness>
        </Grid.Resources>
        <Grid
            x:Name="TopPlaceholder"
            Height="36"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top" />

        <Grid x:Name="MainGrid">

            <!--  Lyrics area  -->
            <Grid x:Name="LyricsGrid">

                <canvas:CanvasAnimatedControl
                    x:Name="LyricsCanvas"
                    Draw="LyricsCanvas_Draw"
                    Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                    Loaded="LyricsCanvas_Loaded"
                    SizeChanged="LyricsCanvas_SizeChanged"
                    Update="LyricsCanvas_Update">
                    <canvas:CanvasAnimatedControl.OpacityTransition>
                        <ScalarTransition />
                    </canvas:CanvasAnimatedControl.OpacityTransition>
                </canvas:CanvasAnimatedControl>

            </Grid>

            <!--  Song info area  -->
            <Grid x:Name="SongInfoGrid" Margin="36">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="SongInfoColumnDefinition" Width="*" />
                    <ColumnDefinition x:Name="SpacerColumnDefinition" Width="36" />
                    <ColumnDefinition x:Name="LyricsAreaColumnDefinition" Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.Resources>
                    <Storyboard x:Key="HideSongInfoGrid">
                        <DoubleAnimation
                            Storyboard.TargetName="SongInfoGrid"
                            Storyboard.TargetProperty="Opacity"
                            From="1"
                            To="0"
                            Duration="0:0:0.2" />
                    </Storyboard>
                    <Storyboard x:Key="ShowSongInfoGrid">
                        <DoubleAnimation
                            Storyboard.TargetName="SongInfoGrid"
                            Storyboard.TargetProperty="Opacity"
                            From="0"
                            To="1"
                            Duration="0:0:0.2" />
                    </Storyboard>
                </Grid.Resources>

                <interactivity:Interaction.Behaviors>
                    <interactivity:DataTriggerBehavior
                        Binding="{x:Bind ViewModel.ShowLyricsOnly, Mode=OneWay}"
                        ComparisonCondition="Equal"
                        Value="True">
                        <interactivity:ControlStoryboardAction Storyboard="{StaticResource HideSongInfoGrid}" />
                    </interactivity:DataTriggerBehavior>
                    <interactivity:DataTriggerBehavior
                        Binding="{x:Bind ViewModel.ShowLyricsOnly, Mode=OneWay}"
                        ComparisonCondition="Equal"
                        Value="False">
                        <interactivity:ControlStoryboardAction Storyboard="{StaticResource ShowSongInfoGrid}" />
                    </interactivity:DataTriggerBehavior>
                </interactivity:Interaction.Behaviors>

                <Grid
                    x:Name="LyricsPlaceholderGrid"
                    Grid.Column="2"
                    SizeChanged="LyricsPlaceholderGrid_SizeChanged" />

                <Grid
                    x:Name="SongInfoInnerGrid"
                    Grid.Column="0"
                    Grid.ColumnSpan="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="4*" />
                        <!--  Cover area  -->
                        <RowDefinition Height="20*" />
                        <!--  Spacer  -->
                        <RowDefinition Height="2*" />
                        <!--  Title and artist area  -->
                        <RowDefinition Height="5*" />
                        <RowDefinition Height="2*" />
                    </Grid.RowDefinitions>

                    <Grid.Resources>

                        <!--  Animation for song info  -->
                        <Storyboard x:Name="SongInfoStackPanelFadeInStoryboard">
                            <DoubleAnimation
                                Storyboard.TargetName="SongInfoInnerGrid"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Name="SongInfoStackPanelFadeOutStoryboard" BeginTime="0:0:0.2">
                            <DoubleAnimation
                                Storyboard.TargetName="SongInfoInnerGrid"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="0:0:0.2" />
                        </Storyboard>

                    </Grid.Resources>

                    <interactivity:Interaction.Behaviors>

                        <interactivity:DataTriggerBehavior
                            Binding="{x:Bind ViewModel.IsSmallScreenMode, Mode=OneWay}"
                            ComparisonCondition="Equal"
                            Value="True">
                            <interactivity:ControlStoryboardAction Storyboard="{StaticResource SongInfoStackPanelFadeOutStoryboard}" />
                        </interactivity:DataTriggerBehavior>
                        <interactivity:DataTriggerBehavior
                            Binding="{x:Bind ViewModel.IsSmallScreenMode, Mode=OneWay}"
                            ComparisonCondition="Equal"
                            Value="False">
                            <interactivity:ControlStoryboardAction Storyboard="{StaticResource SongInfoStackPanelFadeInStoryboard}" />
                        </interactivity:DataTriggerBehavior>

                    </interactivity:Interaction.Behaviors>

                    <!--  Cover area  -->
                    <Grid
                        x:Name="CoverArea"
                        Grid.Row="1"
                        SizeChanged="CoverArea_SizeChanged">

                        <Grid x:Name="CoverImageGrid" CornerRadius="24">
                            <Image
                                x:Name="CoverImage"
                                Source="{x:Bind ViewModel.CoverImage, Mode=OneWay}"
                                Stretch="Uniform">
                                <Image.Resources>
                                    <Storyboard x:Key="CoverIamgeFadeInStoryboard">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CoverImage" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="CoverIamgeFadeOutStoryboard">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CoverImage" Storyboard.TargetProperty="Opacity">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </Image.Resources>
                                <interactivity:Interaction.Behaviors>
                                    <interactivity:DataTriggerBehavior
                                        Binding="{x:Bind ViewModel.AboutToUpdateUI, Mode=OneWay}"
                                        ComparisonCondition="Equal"
                                        Value="True">
                                        <interactivity:ControlStoryboardAction Storyboard="{StaticResource CoverIamgeFadeOutStoryboard}" />
                                    </interactivity:DataTriggerBehavior>
                                    <interactivity:DataTriggerBehavior
                                        Binding="{x:Bind ViewModel.AboutToUpdateUI, Mode=OneWay}"
                                        ComparisonCondition="Equal"
                                        Value="False">
                                        <interactivity:ControlStoryboardAction Storyboard="{StaticResource CoverIamgeFadeInStoryboard}" />
                                    </interactivity:DataTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </Image>
                        </Grid>

                    </Grid>

                    <!--  Title and artist  -->
                    <StackPanel Grid.Row="3" Orientation="Vertical">
                        <!--  Song title  -->
                        <controls:OpacityMaskView x:Name="TitleOpacityMaskView" HorizontalAlignment="Center">
                            <controls:OpacityMaskView.OpacityMask>
                                <Rectangle Fill="{StaticResource BaseHighEdgeHorizontalFadeBrush}" />
                            </controls:OpacityMaskView.OpacityMask>

                            <controls:OpacityMaskView.Resources>
                                <Storyboard x:Key="TitleOpacityMaskViewFadeInStoryboard">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TitleOpacityMaskView" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="TitleOpacityMaskViewFadeOutStoryboard">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TitleOpacityMaskView" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </controls:OpacityMaskView.Resources>

                            <interactivity:Interaction.Behaviors>
                                <interactivity:DataTriggerBehavior
                                    Binding="{x:Bind ViewModel.AboutToUpdateUI, Mode=OneWay}"
                                    ComparisonCondition="Equal"
                                    Value="True">
                                    <interactivity:ControlStoryboardAction Storyboard="{StaticResource TitleOpacityMaskViewFadeOutStoryboard}" />
                                </interactivity:DataTriggerBehavior>
                                <interactivity:DataTriggerBehavior
                                    Binding="{x:Bind ViewModel.AboutToUpdateUI, Mode=OneWay}"
                                    ComparisonCondition="Equal"
                                    Value="False">
                                    <interactivity:ControlStoryboardAction Storyboard="{StaticResource TitleOpacityMaskViewFadeInStoryboard}" />
                                </interactivity:DataTriggerBehavior>
                            </interactivity:Interaction.Behaviors>

                            <labs:MarqueeText
                                x:Name="TitleTextBlock"
                                Behavior="Bouncing"
                                FontSize="{StaticResource TitleTextBlockFontSize}"
                                FontWeight="SemiBold"
                                Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                                Text="{x:Bind ViewModel.Title, Mode=OneWay}" />
                        </controls:OpacityMaskView>

                        <!--  Song artist  -->
                        <controls:OpacityMaskView x:Name="ArtistOpacityMaskView" HorizontalAlignment="Center">
                            <controls:OpacityMaskView.OpacityMask>
                                <Rectangle Fill="{StaticResource BaseHighEdgeHorizontalFadeBrush}" />
                            </controls:OpacityMaskView.OpacityMask>
                            <controls:OpacityMaskView.Resources>
                                <Storyboard x:Key="ArtistOpacityMaskViewFadeInStoryboard">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ArtistOpacityMaskView" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="ArtistOpacityMaskViewFadeOutStoryboard">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ArtistOpacityMaskView" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </controls:OpacityMaskView.Resources>

                            <interactivity:Interaction.Behaviors>
                                <interactivity:DataTriggerBehavior
                                    Binding="{x:Bind ViewModel.AboutToUpdateUI, Mode=OneWay}"
                                    ComparisonCondition="Equal"
                                    Value="True">
                                    <interactivity:ControlStoryboardAction Storyboard="{StaticResource ArtistOpacityMaskViewFadeOutStoryboard}" />
                                </interactivity:DataTriggerBehavior>
                                <interactivity:DataTriggerBehavior
                                    Binding="{x:Bind ViewModel.AboutToUpdateUI, Mode=OneWay}"
                                    ComparisonCondition="Equal"
                                    Value="False">
                                    <interactivity:ControlStoryboardAction Storyboard="{StaticResource ArtistOpacityMaskViewFadeInStoryboard}" />
                                </interactivity:DataTriggerBehavior>
                            </interactivity:Interaction.Behaviors>

                            <labs:MarqueeText
                                Behavior="Bouncing"
                                FontSize="{StaticResource SubtitleTextBlockFontSize}"
                                FontWeight="SemiBold"
                                Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                                Opacity="0.5"
                                Text="{x:Bind ViewModel.Artist, Mode=OneWay}" />
                        </controls:OpacityMaskView>

                    </StackPanel>

                </Grid>

                <TextBlock
                    x:Name="MainPageNoMusicPlayingTextBlock"
                    x:Uid="MainPageNoMusicPlaying"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{StaticResource TitleTextBlockStyle}">
                    <TextBlock.Resources>
                        <Storyboard x:Key="ShowMainPageNoMusicPlayingTextBlockStoryboard">
                            <DoubleAnimation
                                Storyboard.TargetName="MainPageNoMusicPlayingTextBlock"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0:0:0.2" />
                        </Storyboard>
                        <Storyboard x:Key="HideMainPageNoMusicPlayingTextBlockStoryboard">
                            <DoubleAnimation
                                Storyboard.TargetName="MainPageNoMusicPlayingTextBlock"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </TextBlock.Resources>
                    <interactivity:Interaction.Behaviors>
                        <interactivity:DataTriggerBehavior
                            Binding="{x:Bind ViewModel.IsAnyMusicSessionExisted, Mode=OneWay}"
                            ComparisonCondition="Equal"
                            Value="True">
                            <interactivity:ControlStoryboardAction Storyboard="{StaticResource HideMainPageNoMusicPlayingTextBlockStoryboard}" />
                        </interactivity:DataTriggerBehavior>
                        <interactivity:DataTriggerBehavior
                            Binding="{x:Bind ViewModel.IsAnyMusicSessionExisted, Mode=OneWay}"
                            ComparisonCondition="Equal"
                            Value="False">
                            <interactivity:ControlStoryboardAction Storyboard="{StaticResource ShowMainPageNoMusicPlayingTextBlockStoryboard}" />
                        </interactivity:DataTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </TextBlock>

            </Grid>

        </Grid>

        <Grid
            x:Name="BottomCommandGrid"
            Margin="0,0,4,4"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Background="Transparent"
            Opacity=".5"
            PointerEntered="BottomCommandGrid_PointerEntered"
            PointerExited="BottomCommandGrid_PointerExited">
            <Grid.OpacityTransition>
                <ScalarTransition />
            </Grid.OpacityTransition>

            <interactivity:Interaction.Behaviors>

                <interactivity:DataTriggerBehavior
                    Binding="{x:Bind SettingsService.IsImmersiveMode, Mode=OneWay}"
                    ComparisonCondition="Equal"
                    Value="False">
                    <interactivity:ChangePropertyAction PropertyName="Opacity" Value="0.5" />
                </interactivity:DataTriggerBehavior>
                <interactivity:DataTriggerBehavior
                    Binding="{x:Bind SettingsService.IsImmersiveMode, Mode=OneWay}"
                    ComparisonCondition="Equal"
                    Value="True">
                    <interactivity:ChangePropertyAction PropertyName="Opacity" Value="0" />
                </interactivity:DataTriggerBehavior>

            </interactivity:Interaction.Behaviors>

            <StackPanel HorizontalAlignment="Right" Spacing="4">

                <ToggleButton
                    x:Name="ImmersiveModeButton"
                    x:Uid="MainWindowImmersiveMode"
                    IsChecked="{x:Bind SettingsService.IsImmersiveMode, Mode=TwoWay}"
                    Style="{StaticResource GhostToggleButtonStyle}">
                    <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xF131;" />
                </ToggleButton>

                <ToggleButton
                    x:Name="LyricsOnlyButton"
                    x:Uid="MainWindowLyricsOnly"
                    IsChecked="{x:Bind ViewModel.ShowLyricsOnly, Mode=TwoWay}"
                    Style="{StaticResource GhostToggleButtonStyle}"
                    Visibility="{x:Bind ViewModel.LyricsExisted, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                    <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE66C;" />
                </ToggleButton>

                <Button
                    x:Name="SettingsButton"
                    Click="SettingsButton_Click"
                    Style="{StaticResource GhostButtonStyle}">
                    <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xF8B0;" />
                </Button>

            </StackPanel>

        </Grid>

        <TeachingTip
            x:Name="WelcomeTeachingTip"
            x:Uid="MainPageWelcomeTeachingTip"
            Closed="WelcomeTeachingTip_Closed"
            IsOpen="False"
            Target="{x:Bind SettingsButton}" />

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <!--  Narrow  -->
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SongInfoColumnDefinition.Width" Value="0" />
                    </VisualState.Setters>
                </VisualState>

                <!--  Wide  -->
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SongInfoColumnDefinition.Width" Value="*" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
