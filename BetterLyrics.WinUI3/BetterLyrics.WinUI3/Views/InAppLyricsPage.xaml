<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="BetterLyrics.WinUI3.Views.InAppLyricsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:converters="using:CommunityToolkit.WinUI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:labs="using:CommunityToolkit.Labs.WinUI.MarqueeTextRns"
    xmlns:local="using:BetterLyrics.WinUI3.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:renderer="using:BetterLyrics.WinUI3.Renderer"
    xmlns:ui="using:CommunityToolkit.WinUI"
    mc:Ignorable="d">

    <Grid x:Name="RootGrid">
        <!--  Lyrics area  -->
        <Grid x:Name="LyricsGrid">
            <Grid.OpacityTransition>
                <ScalarTransition />
            </Grid.OpacityTransition>
            <renderer:InAppLyricsRenderer />
        </Grid>

        <Grid Margin="36">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="36" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.OpacityTransition>
                <ScalarTransition />
            </Grid.OpacityTransition>

            <!--  Lyrics placeholder  -->
            <Grid
                x:Name="LyricsPlaceholderGrid"
                Opacity=".5"
                SizeChanged="LyricsPlaceholderGrid_SizeChanged">
                <Grid.OpacityTransition>
                    <ScalarTransition />
                </Grid.OpacityTransition>
                <StackPanel
                    x:Name="LyricsPlaceholderStackPanel"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Opacity="0"
                    Spacing="12">
                    <StackPanel.OpacityTransition>
                        <ScalarTransition />
                    </StackPanel.OpacityTransition>
                    <FontIcon
                        FontFamily="Segoe Fluent Icons"
                        FontSize="{StaticResource DisplayTextBlockFontSize}"
                        Glyph="&#xE90B;" />
                    <TextBlock x:Uid="MainPageLyricsNotFound" FontSize="{StaticResource TitleTextBlockFontSize}" />
                </StackPanel>
            </Grid>

            <!--  Song info area  -->
            <Grid x:Name="SongInfoInnerGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="4*" />
                    <!--  Cover area  -->
                    <RowDefinition Height="20*" />
                    <!--  Spacer  -->
                    <RowDefinition Height="2*" />
                    <!--  Title and artist area  -->
                    <RowDefinition Height="5*" />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <Grid.OpacityTransition>
                    <ScalarTransition />
                </Grid.OpacityTransition>

                <!--  Cover area  -->
                <Grid
                    x:Name="CoverArea"
                    Grid.Row="1"
                    SizeChanged="CoverArea_SizeChanged">

                    <Grid
                        x:Name="CoverImageGrid"
                        CornerRadius="{x:Bind ViewModel.CoverImageGridCornerRadius, Mode=OneWay}"
                        SizeChanged="CoverImageGrid_SizeChanged">
                        <Image
                            x:Name="CoverImage"
                            Source="{x:Bind ViewModel.CoverImage, Mode=OneWay}"
                            Stretch="Uniform">
                            <Image.Resources>
                                <Storyboard x:Key="CoverIamgeFadeInStoryboard">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CoverImage" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="CoverIamgeFadeOutStoryboard">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CoverImage" Storyboard.TargetProperty="Opacity">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </Image.Resources>
                            <interactivity:Interaction.Behaviors>
                                <interactivity:DataTriggerBehavior
                                    Binding="{x:Bind ViewModel.AboutToUpdateUI, Mode=OneWay}"
                                    ComparisonCondition="Equal"
                                    Value="True">
                                    <interactivity:ControlStoryboardAction Storyboard="{StaticResource CoverIamgeFadeOutStoryboard}" />
                                </interactivity:DataTriggerBehavior>
                                <interactivity:DataTriggerBehavior
                                    Binding="{x:Bind ViewModel.AboutToUpdateUI, Mode=OneWay}"
                                    ComparisonCondition="Equal"
                                    Value="False">
                                    <interactivity:ControlStoryboardAction Storyboard="{StaticResource CoverIamgeFadeInStoryboard}" />
                                </interactivity:DataTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </Image>
                    </Grid>

                </Grid>

                <!--  Title and artist  -->
                <StackPanel Grid.Row="3" Orientation="Vertical">
                    <!--  Song title  -->
                    <controls:OpacityMaskView x:Name="TitleOpacityMaskView" HorizontalAlignment="Center">
                        <controls:OpacityMaskView.OpacityMask>
                            <Rectangle Fill="{StaticResource BaseHighEdgeHorizontalFadeBrush}" />
                        </controls:OpacityMaskView.OpacityMask>

                        <controls:OpacityMaskView.Resources>
                            <Storyboard x:Key="TitleOpacityMaskViewFadeInStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TitleOpacityMaskView" Storyboard.TargetProperty="Opacity">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="TitleOpacityMaskViewFadeOutStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TitleOpacityMaskView" Storyboard.TargetProperty="Opacity">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </controls:OpacityMaskView.Resources>

                        <interactivity:Interaction.Behaviors>
                            <interactivity:DataTriggerBehavior
                                Binding="{x:Bind ViewModel.AboutToUpdateUI, Mode=OneWay}"
                                ComparisonCondition="Equal"
                                Value="True">
                                <interactivity:ControlStoryboardAction Storyboard="{StaticResource TitleOpacityMaskViewFadeOutStoryboard}" />
                            </interactivity:DataTriggerBehavior>
                            <interactivity:DataTriggerBehavior
                                Binding="{x:Bind ViewModel.AboutToUpdateUI, Mode=OneWay}"
                                ComparisonCondition="Equal"
                                Value="False">
                                <interactivity:ControlStoryboardAction Storyboard="{StaticResource TitleOpacityMaskViewFadeInStoryboard}" />
                            </interactivity:DataTriggerBehavior>
                        </interactivity:Interaction.Behaviors>

                        <labs:MarqueeText
                            x:Name="TitleTextBlock"
                            Behavior="Bouncing"
                            FontSize="{StaticResource TitleTextBlockFontSize}"
                            FontWeight="SemiBold"
                            Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                            Text="{x:Bind ViewModel.SongInfo.Title, Mode=OneWay}" />
                    </controls:OpacityMaskView>

                    <!--  Song artist  -->
                    <controls:OpacityMaskView x:Name="ArtistOpacityMaskView" HorizontalAlignment="Center">
                        <controls:OpacityMaskView.OpacityMask>
                            <Rectangle Fill="{StaticResource BaseHighEdgeHorizontalFadeBrush}" />
                        </controls:OpacityMaskView.OpacityMask>
                        <controls:OpacityMaskView.Resources>
                            <Storyboard x:Key="ArtistOpacityMaskViewFadeInStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ArtistOpacityMaskView" Storyboard.TargetProperty="Opacity">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="ArtistOpacityMaskViewFadeOutStoryboard">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ArtistOpacityMaskView" Storyboard.TargetProperty="Opacity">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </controls:OpacityMaskView.Resources>

                        <interactivity:Interaction.Behaviors>
                            <interactivity:DataTriggerBehavior
                                Binding="{x:Bind ViewModel.AboutToUpdateUI, Mode=OneWay}"
                                ComparisonCondition="Equal"
                                Value="True">
                                <interactivity:ControlStoryboardAction Storyboard="{StaticResource ArtistOpacityMaskViewFadeOutStoryboard}" />
                            </interactivity:DataTriggerBehavior>
                            <interactivity:DataTriggerBehavior
                                Binding="{x:Bind ViewModel.AboutToUpdateUI, Mode=OneWay}"
                                ComparisonCondition="Equal"
                                Value="False">
                                <interactivity:ControlStoryboardAction Storyboard="{StaticResource ArtistOpacityMaskViewFadeInStoryboard}" />
                            </interactivity:DataTriggerBehavior>
                        </interactivity:Interaction.Behaviors>

                        <labs:MarqueeText
                            Behavior="Bouncing"
                            FontSize="{StaticResource SubtitleTextBlockFontSize}"
                            FontWeight="SemiBold"
                            Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                            Opacity="0.5"
                            Text="{x:Bind ViewModel.SongInfo.Artist, Mode=OneWay}" />
                    </controls:OpacityMaskView>

                </StackPanel>

            </Grid>

        </Grid>

        <!--  No music playing placeholder  -->
        <TextBlock
            x:Name="MainPageNoMusicPlayingTextBlock"
            x:Uid="MainPageNoMusicPlaying"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Style="{StaticResource TitleTextBlockStyle}">
            <TextBlock.OpacityTransition>
                <ScalarTransition />
            </TextBlock.OpacityTransition>
        </TextBlock>

        <!--  Bottom-right command area  -->
        <Grid
            x:Name="BottomCommandGrid"
            Margin="0,0,4,4"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Background="Transparent"
            Opacity=".5"
            PointerEntered="BottomCommandGrid_PointerEntered"
            PointerExited="BottomCommandGrid_PointerExited">
            <Grid.OpacityTransition>
                <ScalarTransition />
            </Grid.OpacityTransition>

            <interactivity:Interaction.Behaviors>

                <interactivity:DataTriggerBehavior
                    Binding="{x:Bind ViewModel.IsImmersiveMode, Mode=OneWay}"
                    ComparisonCondition="Equal"
                    Value="False">
                    <interactivity:ChangePropertyAction PropertyName="Opacity" Value="0.5" />
                </interactivity:DataTriggerBehavior>
                <interactivity:DataTriggerBehavior
                    Binding="{x:Bind ViewModel.IsImmersiveMode, Mode=OneWay}"
                    ComparisonCondition="Equal"
                    Value="True">
                    <interactivity:ChangePropertyAction PropertyName="Opacity" Value="0" />
                </interactivity:DataTriggerBehavior>

            </interactivity:Interaction.Behaviors>

            <StackPanel HorizontalAlignment="Right" Spacing="4">

                <ToggleButton
                    x:Name="DesktopLyricsToggleButton"
                    x:Uid="MainPageDesktopLyricsToggler"
                    Checked="DesktopLyricsToggleButton_Checked"
                    Content="{ui:FontIcon Glyph=&#xEB41;}"
                    Style="{StaticResource GhostToggleButtonStyle}"
                    Unchecked="DesktopLyricsToggleButton_Unchecked">
                    <ToggleButton.OpacityTransition>
                        <ScalarTransition />
                    </ToggleButton.OpacityTransition>
                </ToggleButton>

                <Button
                    x:Name="DisplayTypeSwitchButton"
                    x:Uid="MainPageDisplayTypeSwitcher"
                    Content="{ui:FontIcon Glyph=&#xF246;}"
                    Style="{StaticResource GhostButtonStyle}">
                    <Button.OpacityTransition>
                        <ScalarTransition />
                    </Button.OpacityTransition>
                    <Button.Flyout>
                        <Flyout>
                            <Flyout.FlyoutPresenterStyle>
                                <Style TargetType="FlyoutPresenter">
                                    <Setter Property="Padding" Value="12,2,12,8" />
                                    <Setter Property="CornerRadius" Value="8" />
                                </Style>
                            </Flyout.FlyoutPresenterStyle>
                            <RadioButtons MaxColumns="1" SelectedIndex="{x:Bind ViewModel.DisplayType, Mode=OneWay, Converter={StaticResource EnumToIntConverter}}">
                                <RadioButton
                                    x:Uid="MainPageAlbumArtOnly"
                                    Command="{x:Bind ViewModel.DisplayTypeChangedCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag}"
                                    Tag="0" />
                                <RadioButton
                                    x:Uid="MainPageLyriscOnly"
                                    Command="{x:Bind ViewModel.DisplayTypeChangedCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag}"
                                    Tag="1" />
                                <RadioButton
                                    x:Uid="MainPageSplitView"
                                    Command="{x:Bind ViewModel.DisplayTypeChangedCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag}"
                                    Tag="2" />
                            </RadioButtons>
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <ToggleButton
                    x:Name="ImmersiveModeButton"
                    x:Uid="MainWindowImmersiveMode"
                    Content="{ui:FontIcon Glyph=&#xF131;}"
                    IsChecked="{x:Bind ViewModel.IsImmersiveMode, Mode=TwoWay}"
                    Style="{StaticResource GhostToggleButtonStyle}" />

                <Button
                    x:Name="MusicInfoButton"
                    Content="{ui:FontIcon Glyph=&#xF167;}"
                    Style="{StaticResource GhostButtonStyle}">
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel Spacing="16">
                                <StackPanel Orientation="Horizontal" Spacing="12">
                                    <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xED35;" />
                                    <TextBlock Text="{x:Bind ViewModel.SongInfo.SourceAppUserModelId, Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Spacing="12">
                                    <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xEC4F;" />
                                    <TextBlock Text="{x:Bind ViewModel.SongInfo.Title, Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Spacing="12">
                                    <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xE77B;" />
                                    <TextBlock Text="{x:Bind ViewModel.SongInfo.Artist, Mode=OneWay}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Spacing="12">
                                    <FontIcon FontFamily="Segoe Fluent Icons" Glyph="&#xF0E3;" />
                                    <ListView
                                        x:Name="MatchedFilesListView"
                                        ItemsSource="{x:Bind ViewModel.SongInfo.FilesFound, Mode=OneWay}"
                                        SelectionMode="None">
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem">
                                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                <Setter Property="Margin" Value="0" />
                                                <Setter Property="Padding" Value="0" />
                                                <Setter Property="MinWidth" Value="0" />
                                                <Setter Property="MinHeight" Value="0" />
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <HyperlinkButton
                                                    VerticalAlignment="Center"
                                                    Click="OpenMatchedFileButton_Click"
                                                    RelativePanel.AlignLeftWithPanel="True"
                                                    Tag="{Binding Mode=OneWay}">
                                                    <TextBlock
                                                        MaxWidth="300"
                                                        Text="{Binding Mode=OneWay}"
                                                        TextWrapping="Wrap" />
                                                </HyperlinkButton>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                    <TextBlock
                                        x:Name="NoLocalFilesMatchedTextBlock"
                                        x:Uid="MainPageNoLocalFilesMatched"
                                        Visibility="Collapsed" />
                                </StackPanel>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <Button
                    x:Name="SettingsButton"
                    Click="SettingsButton_Click"
                    Content="{ui:FontIcon Glyph=&#xF8B0;}"
                    Style="{StaticResource GhostButtonStyle}" />

            </StackPanel>

        </Grid>

        <TeachingTip
            x:Name="WelcomeTeachingTip"
            x:Uid="MainPageWelcomeTeachingTip"
            Closed="WelcomeTeachingTip_Closed"
            IsOpen="{x:Bind ViewModel.IsWelcomeTeachingTipOpen, Mode=OneWay}"
            Target="{x:Bind SettingsButton}" />

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="LayoutStates">

                <!--  Album art only  -->
                <VisualState x:Name="AlbumArtOnly">
                    <VisualState.StateTriggers>
                        <ui:CompareStateTrigger
                            Comparison="Equal"
                            Value="{x:Bind ViewModel.DisplayType, Mode=OneWay, Converter={StaticResource EnumToIntConverter}}"
                            To="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LyricsGrid.Opacity" Value="1" />
                        <Setter Target="LyricsPlaceholderGrid.Opacity" Value="0" />
                        <Setter Target="LyricsPlaceholderGrid.(Grid.Column)" Value="0" />
                        <Setter Target="LyricsPlaceholderGrid.(Grid.ColumnSpan)" Value="3" />
                        <Setter Target="SongInfoInnerGrid.(Grid.Column)" Value="0" />
                        <Setter Target="SongInfoInnerGrid.(Grid.ColumnSpan)" Value="3" />
                        <Setter Target="SongInfoInnerGrid.Opacity" Value="1" />
                        <Setter Target="MainPageNoMusicPlayingTextBlock.Opacity" Value="0" />
                    </VisualState.Setters>
                </VisualState>

                <!--  Lyrics only  -->
                <VisualState x:Name="LyricsOnly">
                    <VisualState.StateTriggers>
                        <ui:CompareStateTrigger
                            Comparison="Equal"
                            Value="{x:Bind ViewModel.DisplayType, Mode=OneWay, Converter={StaticResource EnumToIntConverter}}"
                            To="1" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SongInfoInnerGrid.Opacity" Value="0" />
                        <Setter Target="SongInfoInnerGrid.(Grid.Column)" Value="0" />
                        <Setter Target="SongInfoInnerGrid.(Grid.ColumnSpan)" Value="3" />
                        <Setter Target="LyricsGrid.Opacity" Value="1" />
                        <Setter Target="LyricsPlaceholderGrid.(Grid.Column)" Value="0" />
                        <Setter Target="LyricsPlaceholderGrid.(Grid.ColumnSpan)" Value="3" />
                        <Setter Target="LyricsPlaceholderGrid.Opacity" Value="1" />
                        <Setter Target="MainPageNoMusicPlayingTextBlock.Opacity" Value="0" />
                    </VisualState.Setters>
                </VisualState>

                <!--  Split view  -->
                <VisualState x:Name="SplitView">
                    <VisualState.StateTriggers>
                        <ui:CompareStateTrigger
                            Comparison="Equal"
                            Value="{x:Bind ViewModel.DisplayType, Mode=OneWay, Converter={StaticResource EnumToIntConverter}}"
                            To="2" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SongInfoInnerGrid.(Grid.Column)" Value="0" />
                        <Setter Target="SongInfoInnerGrid.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="SongInfoInnerGrid.Opacity" Value="1" />
                        <Setter Target="LyricsGrid.Opacity" Value="1" />
                        <Setter Target="LyricsPlaceholderGrid.(Grid.Column)" Value="2" />
                        <Setter Target="LyricsPlaceholderGrid.(Grid.ColumnSpan)" Value="1" />
                        <Setter Target="LyricsPlaceholderGrid.Opacity" Value="1" />
                        <Setter Target="MainPageNoMusicPlayingTextBlock.Opacity" Value="0" />
                    </VisualState.Setters>
                </VisualState>

                <!--  Placeholder only  -->
                <VisualState x:Name="PlaceholderOnly">
                    <VisualState.StateTriggers>
                        <ui:CompareStateTrigger
                            Comparison="Equal"
                            Value="{x:Bind ViewModel.DisplayType, Mode=OneWay, Converter={StaticResource EnumToIntConverter}}"
                            To="3" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SongInfoInnerGrid.Opacity" Value="0" />
                        <Setter Target="LyricsGrid.Opacity" Value="0" />
                        <Setter Target="LyricsPlaceholderGrid.Opacity" Value="0" />
                        <Setter Target="MainPageNoMusicPlayingTextBlock.Opacity" Value="1" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="FilesMatchStates">
                <VisualState x:Name="Matched" />
                <VisualState x:Name="NotMatched">
                    <VisualState.StateTriggers>
                        <ui:IsNullOrEmptyStateTrigger Value="{x:Bind ViewModel.SongInfo.FilesFound, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NoLocalFilesMatchedTextBlock.Visibility" Value="Visible" />
                        <Setter Target="MatchedFilesListView.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="LyricsExistenceStates">
                <VisualState x:Name="Existed">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.SongInfo.IsLyricsExisted, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LyricsPlaceholderStackPanel.Opacity" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NotExisted">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.SongInfo.IsLyricsExisted, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="LyricsPlaceholderStackPanel.Opacity" Value=".5" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="MusicPlayingStates">
                <VisualState x:Name="MusicPlaying">
                    <VisualState.StateTriggers>
                        <ui:IsNotEqualStateTrigger Value="{x:Bind ViewModel.DisplayType, Mode=OneWay}" To="3" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DisplayTypeSwitchButton.Visibility" Value="Visible" />
                        <Setter Target="DesktopLyricsToggleButton.Visibility" Value="Visible" />
                        <Setter Target="ImmersiveModeButton.Visibility" Value="Visible" />
                        <Setter Target="MusicInfoButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NoMusicPlaying">
                    <VisualState.StateTriggers>
                        <ui:CompareStateTrigger
                            Comparison="Equal"
                            Value="{x:Bind ViewModel.DisplayType, Mode=OneWay}"
                            To="3" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DisplayTypeSwitchButton.Visibility" Value="Collapsed" />
                        <Setter Target="DesktopLyricsToggleButton.Visibility" Value="Collapsed" />
                        <Setter Target="ImmersiveModeButton.Visibility" Value="Collapsed" />
                        <Setter Target="MusicInfoButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
